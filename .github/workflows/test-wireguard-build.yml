name: Test Build wireguard-go for Padavan

on: 
  release:
    types: [published]
  push:
#    tags:
#    - 'v*'
    branches: 
      - master
  watch:
    types: [started]


jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: 初始化
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        #sudo apt-get update   
        sudo apt-get -y install cmake git
        cd ~
        wget https://dl.google.com/go/go1.13.7.linux-amd64.tar.gz
        sudo tar -C /usr/local -xzf go1.13.7.linux-amd64.tar.gz
        export PATH=$PATH:/usr/local/go/bin
        mkdir go 
        cd go 
        mkdir bin 
        mkdir src 
        mkdir pkg
    - name: 编译wg
      run: |
        cd /tmp/
        git clone https://github.com/WireGuard/wireguard-tools.git
        git clone git://git.netfilter.org/libmnl
        cd /tmp/libmnl/
        ./autogen.sh --disable-shared --host=mipsel-linux-uclibc
        ./configure
        make
        cd /tmp/wireguard-tools/src/
        env CFLAGS=-I/tmp/libmnl/include LDFLAGS=-L/tmp/libmnl/src/.libs make
    - name: 编译wireguard-go      
      run: |
        go get github.com/WireGuard/wireguard-go
        cd $GOPATH/src/github.com/WireGuard/wireguard-go
        env GOOS=linux GOARCH=mipsle go build
    - name : 上传wg
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: wg
        path: /tmp/wireguard-tools/src/tools
    - name : 上传wireguard-go
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: wireguard-go
        path: $GOPATH/src/github.com/WireGuard/wireguard
